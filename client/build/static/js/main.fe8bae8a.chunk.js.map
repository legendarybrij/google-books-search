{"version":3,"sources":["images/books-2.jpg","components/SearchForm.js","utils/API.js","components/BookResult.js","components/ResultsContainer.js","pages/Search.js","pages/Saved.js","components/Nav.js","components/Header.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchForm","props","react_default","a","createElement","id","htmlFor","form","type","name","onChange","e","handleChange","placeholder","required","onClick","handleSearchClick","API","getBooks","axios","get","searchBooks","title","post","addBookToDB","bookData","deleteBook","delete","concat","BookResult","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSaveClick","setState","saved","authors","link","img","description","preventDefault","then","response","console","log","catch","err","state","deleted","bind","assertThisInitialized","handleDeleteClick","_this2","Router","dispatch","location","className","style","display","join","href","target","rel","path","disabled","src","smallThumbnail","thumbnail","alt","React","Component","ResultsContainer","map","book","bookInfo","volumeInfo","components_BookResult","canonicalVolumeLink","imageLinks","key","savedBooks","length","_id","Search","bookInput","value","data","components_SearchForm","components_ResultsContainer","match","Saved","Nav","Link","to","headerStyle","backgroundImage","heroImage","maxWidth","height","backgroundSize","position","Header","App","BrowserRouter","components_Nav","components_Header","Switch","Route","exact","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fe8bae8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/books-2.4f3857b6.jpg\";","import React from \"react\";\n\nfunction SearchForm(props) {\n    return(\n        <div id=\"searchContainer\">\n            <h3>Book Search</h3>\n            <form id=\"bookSearch\">\n                <label htmlFor=\"bookInput\" form=\"bookSearch\">Enter a book to search:</label>\n                <br></br>\n                <input type=\"text\" name=\"bookInput\" id=\"bookInput\" form=\"bookSearch\" onChange={(e) => props.handleChange(e)} placeholder=\"Book Title\" required/>\n                <br></br>\n                <button type=\"submit\" onClick={(e) => props.handleSearchClick(e)}>Search</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchForm;","import axios from \"axios\";\n\nexport default {\n    getBooks: () => {\n        return axios.get(\"/api/books\");\n    },\n    searchBooks: (title) => {\n        return axios.post(\"/search\", {title: title});\n    },\n    addBookToDB: (bookData) => {\n        return axios.post(\"/api/books\", bookData);\n    },\n    deleteBook: (id) => {\n        return axios.delete(`/api/books/${id}`);\n    }\n}","import React from \"react\";\nimport API from \"../utils/API\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nclass BookResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saved: false,\n            deleted: false\n        }\n        this.handleSaveClick = this.handleSaveClick.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    }\n\n    handleSaveClick = function(e) {\n        this.setState({saved: true});\n        const bookData = {\n            title: this.props.title,\n            authors: this.props.authors,\n            link: this.props.link,\n            img: this.props.img,\n            description: this.props.description\n        }\n        e.preventDefault();\n        API.addBookToDB(bookData).then(\n            (response) => {\n                console.log(response);\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    handleDeleteClick(e) {\n        this.setState({deleted: true});\n        e.preventDefault();\n        API.deleteBook(this.props.id).then(\n            (response) => {\n                console.log(response);\n                Router.dispatch(this.props.location, null)\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return(\n            <div className=\"bookResult\" id={(this.props.id)? this.props.id: null} style={{display: this.state.deleted? \"none\" : \"block\"}}>\n                <div className=\"row\">\n                    <div className=\"aboutBook\">\n                        <h4>{this.props.title}</h4>\n                        <p>By: {(this.props.authors)? this.props.authors.join(\", \"): \"N/A\"}</p>\n                    </div>\n                    <div className=\"btnDiv\">\n                        {\n                            // if link to book exists include View button else do not\n                            (this.props.link)? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><button type=\"button\" name=\"view\">View</button></a> : null\n                        }\n                        {\n                            // if this.props.path is \"/\" display save button else display Delete button\n                            (this.props.path === \"/\")? <button type=\"button\" name=\"save\" onClick={this.handleSaveClick} disabled={this.state.saved}>{(this.state.saved)? \"Saved\" : \"Save\"}</button> : <button type=\"button\" name=\"Delete\" onClick={this.handleDeleteClick} disabled={this.state.deleted}>Delete</button>\n                        }\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {(this.props.img)? <img src= {\n                        // if smallthubmail exists on this.props.img use that else if thumbnail exists on this.props.img use that else leave src empty\n                        (this.props.img.smallThumbnail)? this.props.img.smallThumbnail:\n                        (this.props.img.thumbnail)? this.props.img.thumbnail: \"\"\n                    } alt=\"book cover\"/>: null}\n                    <p>{(this.props.description)? this.props.description: \"N/A\"}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookResult;","import React from \"react\";\nimport BookResult from \"../components/BookResult\";\n\nfunction ResultsContainer(props) {\n    if(props.path === \"/\") {\n        return(\n            <div id=\"resultsContainer\">\n                <h3>Results Found</h3>\n                {props.bookData.map((book) => {\n                    const bookInfo = book.volumeInfo;\n                    return <BookResult\n                    title={bookInfo.title}\n                    authors={bookInfo.authors}\n                    description={bookInfo.description}\n                    link={bookInfo.canonicalVolumeLink}\n                    img={bookInfo.imageLinks}\n                    path={props.path}\n                    key={book.id}/>\n                })}\n            </div>\n        );\n    } else if(props.path === \"/saved\") {\n        if(props.savedBooks.length > 0) {\n            return(\n                <div id=\"resultsContainer\">\n                    <h3>Saved Books</h3>\n                    {props.savedBooks.map((book) => {\n                        return <BookResult\n                        title={book.title}\n                        authors={book.authors}\n                        description={book.description}\n                        link={book.link}\n                        img={book.img}\n                        id={book._id}\n                        path={props.path}\n                        key={book._id}/>\n                    })}\n                </div>\n            );\n        } else {\n            return(\n                 <div id=\"resultsContainer\">\n                    <h3>Saved Books</h3>\n                    <p>No saved books.</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default ResultsContainer;","import React from \"react\";\nimport SearchForm from \"../components/SearchForm\";\nimport ResultsContainer from \"../components/ResultsContainer\";\nimport API from \"../utils/API\";\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookInput: \"\",\n            bookData: []\n        }\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({bookInput: e.target.value})\n    }\n\n    handleSearchClick(e) {\n        e.preventDefault();\n        API.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    this.setState({bookData: response.data});\n                    this.setState({bookInput: \"\"});\n                }\n            );\n    }\n\n    render() {\n        return(\n            <main>\n                <SearchForm handleChange={this.handleChange} handleSearchClick={this.handleSearchClick} />\n                {(this.state.bookData.length > 0)?\n                    <ResultsContainer bookData={this.state.bookData} path={this.props.match.path}/> : null\n                }\n            </main>\n        );\n    }\n}\n\nexport default Search;","import React from \"react\";\nimport ResultsContainer from \"../components/ResultsContainer\";\nimport API from \"../utils/API\";\n\nclass Saved extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            savedBooks: []\n        }\n    }\n\n    componentWillMount() {\n        API.getBooks().then(\n            (response) => {\n                this.setState({savedBooks: response.data});\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        console.log(this.state.savedBooks);\n        return(\n            <main>\n                <ResultsContainer savedBooks={this.state.savedBooks} path={this.props.match.path}/>\n            </main>\n        );\n    }\n}\n\nexport default Saved;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nfunction Nav() {\n    return(\n        <nav>\n            <h2>Google Books</h2>\n            <Link to=\"/\">Search</Link>\n            <Link to=\"/saved\">Saved</Link>\n        </nav>\n    );\n}\n\nexport default Nav;","import React from \"react\";\nimport heroImage from \"../images/books-2.jpg\";\n\nconst headerStyle = {\n  \"backgroundImage\": `url(${heroImage})`,\n  \"maxWidth\": \"100vw\",\n  height: \"calc(100vw * .43333)\",\n  \"backgroundSize\": \"cover\",\n  position: \"relative\"\n}\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>(React) Google Books Search</h1>\n            <p>Search for and Save Books of Interest</p>\n        </header>\n    );\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Search}/>\n            <Route path=\"/saved\" component={Saved}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}